#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "head.h"

#define MAX_PRINTABLE_NUMBER 15
#define MAX_LENGTH 10000

int make_string(char *str)
{
	int idx;
	for (idx = 0; str[idx]; idx++)
	{
		if (str[idx] == '\n')
		{
			str[idx] = 0;
			break;
		}
	}	
	return idx;
}

int solve(const char *input,
		  const char *output)
{
	FILE *fp1, *fp2;
	int counter = 0;
	char buffer[MAX_LENGTH];
	int exit = 0;
	int idx;
	char *quotation_mark, *real_quotation_mark, *current_char, *comment;
	int current_idx, open = 0;
	if (!(fp1 = fopen(input, "r")))
	{
		return -11;
	}
	if (!(fp2 = fopen(output, "w"))) 
	{
		return -12;
	}
	while (fgets(buffer, MAX_LENGTH, fp1))
	{
	
		current_char = buffer;
		exit = 0;
		open = 0;
		make_string(buffer);
		while (!exit)
		{
			quotation_mark = strstr(current_char, "\"");
			real_quotation_mark = strstr(current_char, "\\\"");
			comment = strstr(current_char, "//");
			
			if (comment == 0 && quotation_mark == 0)
			{
				fprintf(fp2, "%s\n", buffer);
				exit = 1;
				continue;				
			}
			
			if (comment < real_quotation_mark && comment < quotation_mark && comment != 0 ||
			    (comment != 0 && quotation_mark == 0) ||
			    (comment != 0 && real_quotation_mark == 0 && comment < quotation_mark))
			{
				if (!open)
				{
					current_idx = comment - current_char;
					current_char[current_idx] = 0;
					fprintf(fp2, "%s\n", buffer);
					exit = 1;
					counter++;
					continue;
				}
				else
				{
					current_char = comment + 2;
				}
			}
			else
			{
				if (real_quotation_mark + 1 == quotation_mark)
				{
					current_char = quotation_mark + 1;
				}
				else
				{
					if (open)
					{
						open--;
					}
					else
					{
						open++;
					}
					current_char = quotation_mark + 1;
				}
			}
		}
		if (exit)
		{
			continue;
		}
		printf("PROGA // TCchhhhh!!! \" //heh ");
	}
	if (!feof(fp1))
	{
		fclose(fp1);
		fclose(fp2);
		return -2;
	}
	fclose(fp1);
	fclose(fp2);
	return counter;	
}
